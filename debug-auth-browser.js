// Script de diagn√≥stico para ejecutar en la consola del navegador
// Copia y pega este c√≥digo en la consola del navegador (F12 ‚Üí Console)

console.log('üîç DIAGN√ìSTICO DE AUTENTICACI√ìN EN EL NAVEGADOR');
console.log('==============================================');

// Verificar si Supabase est√° disponible
if (typeof window !== 'undefined' && window.supabase) {
  console.log('‚úÖ Supabase client disponible');
  
  // Verificar sesi√≥n actual
  window.supabase.auth.getSession().then(({ data: { session }, error }) => {
    if (error) {
      console.error('‚ùå Error obteniendo sesi√≥n:', error.message);
    } else if (session) {
      console.log('‚úÖ Usuario autenticado:', {
        email: session.user.email,
        id: session.user.id,
        expires_at: new Date(session.expires_at * 1000).toLocaleString()
      });
    } else {
      console.log('‚ö†Ô∏è No hay sesi√≥n activa - Usuario no autenticado');
      console.log('üí° Necesitas iniciar sesi√≥n para subir fotos');
    }
  });
  
  // Verificar usuario actual
  window.supabase.auth.getUser().then(({ data: { user }, error }) => {
    if (error) {
      console.error('‚ùå Error obteniendo usuario:', error.message);
    } else if (user) {
      console.log('‚úÖ Usuario verificado:', user.email);
    } else {
      console.log('‚ùå No se pudo verificar el usuario');
    }
  });
  
} else {
  console.error('‚ùå Supabase client no est√° disponible en window');
  console.log('üí° Esto podr√≠a indicar un problema de configuraci√≥n');
}

// Verificar variables de entorno (solo las p√∫blicas)
console.log('üîç Variables de entorno p√∫blicas:');
console.log('NEXT_PUBLIC_SUPABASE_URL:', process?.env?.NEXT_PUBLIC_SUPABASE_URL || 'No disponible');
console.log('NEXT_PUBLIC_SUPABASE_ANON_KEY:', process?.env?.NEXT_PUBLIC_SUPABASE_ANON_KEY ? '[CONFIGURADA]' : 'No disponible');